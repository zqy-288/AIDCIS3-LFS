name: 扇形系统测试

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/aidcis2/graphics/sector_*'
      - 'tests/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/aidcis2/graphics/sector_*'
      - 'tests/**'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.8, 3.9, '3.10', '3.11']
        qt-version: [6.2, 6.3, 6.4]
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libegl1-mesa-dev libxkbcommon-x11-0 xvfb
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PySide6==${{ matrix.qt-version }}.*
        pip install pytest pytest-cov pytest-qt pytest-mock
        pip install -r requirements.txt
    
    - name: Run unit tests
      run: |
        python tests/run_sector_tests.py --unit --report unit_report.md
      env:
        QT_QPA_PLATFORM: offscreen
    
    - name: Run integration tests
      run: |
        python tests/run_sector_tests.py --integration --report integration_report.md
      env:
        QT_QPA_PLATFORM: offscreen
    
    - name: Run system tests
      run: |
        python tests/run_sector_tests.py --system --report system_report.md
      env:
        QT_QPA_PLATFORM: offscreen
    
    - name: Generate coverage report
      run: |
        pytest --cov=src/aidcis2/graphics --cov-report=xml --cov-report=html tests/
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: sector-system
        name: sector-coverage
    
    - name: Upload test artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-reports-${{ matrix.os }}-py${{ matrix.python-version }}-qt${{ matrix.qt-version }}
        path: |
          *_report.md
          htmlcov/
          coverage.xml

  performance:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PySide6 pytest-benchmark memory_profiler
        pip install -r requirements.txt
    
    - name: Run performance tests
      run: |
        python -m pytest tests/performance/ --benchmark-json=benchmark.json
      env:
        QT_QPA_PLATFORM: offscreen
    
    - name: Upload benchmark results
      uses: actions/upload-artifact@v3
      with:
        name: benchmark-results
        path: benchmark.json

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Run security scan
      uses: pypa/gh-action-pip-audit@v1.0.8
      with:
        inputs: requirements.txt
    
    - name: Run Bandit security linter
      run: |
        pip install bandit
        bandit -r src/aidcis2/graphics/sector_*.py -f json -o security-report.json
    
    - name: Upload security report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-report
        path: security-report.json